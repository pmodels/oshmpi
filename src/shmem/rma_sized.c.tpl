/* -*- Mode: C{} c-basic-offset:4 {} -*- */
/*
 *  (C) 2018 by Argonne National Laboratory.
 *      See COPYRIGHT in top-level directory.
 *
 * This file is automatically generated. DO NOT EDIT.
 */

#include <shmem.h>
#include "oshmpi_impl.h"
/* TPL_BLOCK_START */

void shmem_getSIZENAME(void *dest, const void *source, size_t nelems, int pe)
{
    OSHMPI_ctx_get(SHMEM_CTX_DEFAULT, MPI_TYPE, dest /* origin_addr */ ,
                   source /* target_addr */ , nelems, pe);
}

void shmem_ctx_getSIZENAME(shmem_ctx_t ctx, void *dest, const void *source, size_t nelems, int pe)
{
    OSHMPI_ctx_get(ctx, MPI_TYPE, dest /* origin_addr */ , source /* target_addr */ , nelems, pe);
}

void shmem_getSIZENAME_nbi(void *dest, const void *source, size_t nelems, int pe)
{
    OSHMPI_ctx_get_nbi(SHMEM_CTX_DEFAULT, MPI_TYPE, dest /* origin_addr */ ,
                       source /* target_addr */ , nelems, pe);
}

void shmem_ctx_getSIZENAME_nbi(shmem_ctx_t ctx, void *dest, const void *source,
                               size_t nelems, int pe)
{
    OSHMPI_ctx_get_nbi(ctx, MPI_TYPE, dest /* origin_addr */ ,
                       source /* target_addr */ , nelems, pe);
}

void shmem_igetSIZENAME(void *dest, const void *source, ptrdiff_t dst, ptrdiff_t sst,
                        size_t nelems, int pe)
{
    OSHMPI_ctx_iget(SHMEM_CTX_DEFAULT, MPI_TYPE, dest /* origin_addr */ ,
                    source /* target_addr */ , dst, sst, nelems, pe);
}

void shmem_ctx_igetSIZENAME(shmem_ctx_t ctx, void *dest, const void *source, ptrdiff_t dst,
                            ptrdiff_t sst, size_t nelems, int pe)
{
    OSHMPI_ctx_iget(ctx, MPI_TYPE, dest /* origin_addr */ ,
                    source /* target_addr */ , dst, sst, nelems, pe);
}

void shmem_putSIZENAME(void *dest, const void *source, size_t nelems, int pe)
{
    OSHMPI_ctx_put(SHMEM_CTX_DEFAULT, MPI_TYPE, source /* origin_addr */ ,
                   dest /* target_addr */ , nelems, pe);
}

void shmem_ctx_putSIZENAME(shmem_ctx_t ctx, void *dest, const void *source, size_t nelems, int pe)
{
    OSHMPI_ctx_put(ctx, MPI_TYPE, source /* origin_addr */ ,
                   dest /* target_addr */ , nelems, pe);
}

void shmem_iputSIZENAME(void *dest, const void *source, ptrdiff_t dst,
                        ptrdiff_t sst, size_t nelems, int pe)
{
    OSHMPI_ctx_iput(SHMEM_CTX_DEFAULT, MPI_TYPE, source /* origin_addr */ , dest /* target_addr */ ,
                    dst, sst, nelems, pe);
}

void shmem_ctx_iputSIZENAME(shmem_ctx_t ctx, void *dest, const void *source,
                            ptrdiff_t dst, ptrdiff_t sst, size_t nelems, int pe)
{
    OSHMPI_ctx_iput(ctx, MPI_TYPE, source /* origin_addr */ , dest /* target_addr */ ,
                    dst, sst, nelems, pe);
}

void shmem_putSIZENAME_nbi(void *dest, const void *source, size_t nelems, int pe)
{
    OSHMPI_ctx_put_nbi(SHMEM_CTX_DEFAULT, MPI_TYPE, source /* origin_addr */ ,
                       dest /* target_addr */ , nelems, pe);
}

void shmem_ctx_putSIZENAME_nbi(shmem_ctx_t ctx, void *dest, const void *source,
                               size_t nelems, int pe)
{
    OSHMPI_ctx_put_nbi(ctx, MPI_TYPE, source /* origin_addr */ ,
                       dest /* target_addr */ , nelems, pe);
}
/* TPL_BLOCK_END */